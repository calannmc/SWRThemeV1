<style>
    .form-container {
        visibility: hidden;
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    .form-container.ready {
        visibility: visible;
        opacity: 1;
    }

    /* Apply color to description text */
    .cmCBdM {
        color: #ffffff; /* Replace with your desired color */
    }

    /* Breadcrumbs styling */
    .breadcrumbs {
        padding: 10px 40px 10px 40px;
    }

    /* Default Styles */
    .section.hero-contact {
        background-color: {{settings.brand_color}}; /* Default Black background */
        color: {{settings.brand_color_white}}; /* White text color for contrast */
        text-align: left; /* Ensure the title is left-aligned */
    }

    /* Center the form and set the max width */
    .form {
        background-color: {{settings.brand_color}}; /* Default Black background */
        color: {{settings.brand_color_white}}; /* White text color for contrast */
        padding: 40px; /* Increased padding around the form */
        border-radius: 8px; /* Optional: rounded corners */
        max-width: 600px; /* Maximum width for the form */
        margin: 0 auto; /* Center the form */
    }

    /* Apply white text specifically to form titles */
    .form h1, .form h2, .form h3, .form label {
        color: #fff;
    }

    /* Make attachments and submit button borders white */
    input[type="file"],
    button[type="submit"] {
        border: 2px solid #ffffff; /* White border */
    }

    button[type="submit"] {
        color: #ffffff; /* White text color */
        background-color: transparent; /* Transparent background */
        padding: 10px 20px; /* Add padding */
        border-radius: 4px; /* Optional rounded corners */
        cursor: pointer;
    }

    button[type="submit"]:hover {
        background-color: rgba(255, 255, 255, 0.1); /* Slight white background on hover */
    }
</style>

{{breadcrumbs}}

<section id="main-content" class="section hero-contact">
    <div class="hero-inner">
        <h1 class="intro-title-contact">{{t 'submit_a_request'}}</h1>
        <h2 class="visibility-hidden">{{ t 'search' }}</h2>
    </div>
</section>

<div class="container-divider"></div>

<div class="container">
    <div class="sub-nav"></div>
    <div id="main-content" class="form">
        <div id="new-request-form"></div>
    </div>
</div>

<script type="module">
    import { renderNewRequestForm } from "new-request-form";

    const container = document.getElementById("new-request-form");

    const settings = {{json settings}};

    const props = {
        requestForm: {{json new_request_form}},
        newRequestPath: {{json (page_path 'new_request')}},
        parentId: {{json parent.id}},
        parentIdPath: {{json parent.url}},
        locale: {{json help_center.locale}},
        baseLocale: {{json help_center.base_locale}},
        hasAtMentions: {{json help_center.at_mentions_enabled}},
        userRole: {{json user.role}},
        brandId: {{json brand.id}},
        wysiwyg: true,
        answerBotModal: {
            answerBot: {{json answer_bot}},
            hasRequestManagement: {{json help_center.request_management_enabled}},
            isSignedIn: {{json signed_in}},
            helpCenterPath: {{json (page_path 'help_center')}},
            requestsPath: {{json (page_path 'requests')}},
            requestPath: {{json (page_path 'request' id=answer_bot.request_id)}}
        },
    };

    renderNewRequestForm(settings, props, container);

    document.addEventListener("DOMContentLoaded", function () {
        const formContainer = document.querySelector('.form-container');
        formContainer.classList.add('ready');

        // Listen for form submission and handle redirect
        const form = document.querySelector('#new-request-form form');

        if (form) {
            form.addEventListener('submit', function (event) {
                // Allow the form to submit as usual

                const formSubmitInterval = setInterval(() => {
                    // Look for an indication of successful submission
                    const successMessage = document.querySelector('.zd-form-submission-success-message');

                    if (successMessage) {
                        clearInterval(formSubmitInterval);
                        // Redirect to the desired URL after a slight delay to ensure submission is complete
                        setTimeout(() => {
                            window.location.href = 'https://www.southwesternrailway.com/';
                        }, 500); // Delay for half a second
                    }
                }, 1000); // Check every 1 second
            });
        }
    });
</script>
